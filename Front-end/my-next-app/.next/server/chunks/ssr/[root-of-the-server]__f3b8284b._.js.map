{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 48, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/styles/RegisterPage.module.css [ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"btnPrimary\": \"RegisterPage-module__ypSeSW__btnPrimary\",\n  \"btnSecondary\": \"RegisterPage-module__ypSeSW__btnSecondary\",\n  \"column\": \"RegisterPage-module__ypSeSW__column\",\n  \"container\": \"RegisterPage-module__ypSeSW__container\",\n  \"formPanel\": \"RegisterPage-module__ypSeSW__formPanel\",\n  \"headerPanel\": \"RegisterPage-module__ypSeSW__headerPanel\",\n  \"loginBlock\": \"RegisterPage-module__ypSeSW__loginBlock\",\n  \"logo\": \"RegisterPage-module__ypSeSW__logo\",\n  \"logoLogin\": \"RegisterPage-module__ypSeSW__logoLogin\",\n  \"welcomePanel\": \"RegisterPage-module__ypSeSW__welcomePanel\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/danil/OneDrive/Documentos/2025/P6/web/Projeto/Front-end/my-next-app/src/utils/validationUtils.ts"],"sourcesContent":["export const isValidEmail = (email: string): boolean => {\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  return emailRegex.test(email);\r\n};\r\n\r\nexport const isValidCpfCnpj = (value: string): boolean => {\r\n  const digitsOnly = value.replace(/\\D/g, '');\r\n  return digitsOnly.length === 11 || digitsOnly.length === 14;\r\n};\r\n\r\nexport const isValidPassword = (password: string): boolean => {\r\n  const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\r\n  return passwordRegex.test(password);\r\n};\r\n\r\nexport const extractDigitsOnly = (value: string): string => {\r\n  return value.replace(/\\D/g, '');\r\n};\r\n\r\nexport const convertToISODate = (date: string): string => {\r\n  const [day, month, year] = date.split('/');\r\n  if (!day || !month || !year) {\r\n    throw new Error('Data inválida');\r\n  }\r\n  return `${year}-${month}-${day}`;\r\n};"],"names":[],"mappings":";;;;;;;AAAO,MAAM,eAAe,CAAC;IAC3B,MAAM,aAAa;IACnB,OAAO,WAAW,IAAI,CAAC;AACzB;AAEO,MAAM,iBAAiB,CAAC;IAC7B,MAAM,aAAa,MAAM,OAAO,CAAC,OAAO;IACxC,OAAO,WAAW,MAAM,KAAK,MAAM,WAAW,MAAM,KAAK;AAC3D;AAEO,MAAM,kBAAkB,CAAC;IAC9B,MAAM,gBAAgB;IACtB,OAAO,cAAc,IAAI,CAAC;AAC5B;AAEO,MAAM,oBAAoB,CAAC;IAChC,OAAO,MAAM,OAAO,CAAC,OAAO;AAC9B;AAEO,MAAM,mBAAmB,CAAC;IAC/B,MAAM,CAAC,KAAK,OAAO,KAAK,GAAG,KAAK,KAAK,CAAC;IACtC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM;QAC3B,MAAM,IAAI,MAAM;IAClB;IACA,OAAO,GAAG,KAAK,CAAC,EAAE,MAAM,CAAC,EAAE,KAAK;AAClC","debugId":null}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/danil/OneDrive/Documentos/2025/P6/web/Projeto/Front-end/my-next-app/src/pages/RegisterPage.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport axios from 'axios';\r\nimport styles from '../styles/RegisterPage.module.css';\r\nimport { IMaskInput } from 'react-imask';\r\n\r\nimport { StoreRegistration as StoreRegistrationData } from '../domain/interfaces/store-registration-interface';\r\nimport { \r\n  isValidEmail, \r\n  isValidCpfCnpj, \r\n  isValidPassword,\r\n  extractDigitsOnly,\r\n  convertToISODate\r\n} from '../utils/validationUtils';\r\nimport Link from 'next/link';\r\n\r\n\r\nconst StoreRegistration: React.FC = () => {\r\n  const router = useRouter();\r\n  \r\n  const [storeName, setStoreName] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [cpfCnpj, setCpfCnpj] = useState('');\r\n  const [birthDate, setBirthDate] = useState('');\r\n  const [telephone, setTelephone] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const handleRegister = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setSuccess(false);\r\n    \r\n    if (!storeName || !password || !email || !cpfCnpj || !birthDate || !telephone) {\r\n      setError('Todos os campos são obrigatórios.');\r\n      return;\r\n    }\r\n\r\n    if (password !== confirmPassword) {\r\n      setError('As senhas não coincidem.');\r\n      return;\r\n    }\r\n\r\n    if (!isValidEmail(email)) {\r\n      setError('Formato de e-mail inválido.');\r\n      return;\r\n    }\r\n\r\n    if (!isValidCpfCnpj(cpfCnpj)) {\r\n      setError('CPF/CNPJ inválido. Deve conter 11 dígitos para CPF ou 14 para CNPJ.');\r\n      return;\r\n    }\r\n\r\n    if (!isValidPassword(password)) {\r\n      setError('A senha deve ter pelo menos 8 caracteres, incluindo uma letra maiúscula, uma letra minúscula, um número e um caractere especial.');\r\n      return;\r\n    }\r\n\r\n    const storeData: StoreRegistrationData = {\r\n      nome: storeName,\r\n      senha: password,\r\n      email,\r\n      cpf_cnpj_proprietario_loja: extractDigitsOnly(cpfCnpj),\r\n      data_nasc_proprietario: new Date(convertToISODate(birthDate)).toISOString(),\r\n      telefone: extractDigitsOnly(telephone)\r\n    };\r\n\r\n    try {\r\n      setLoading(true);\r\n      await axios.post(\r\n        \"http://localhost:9700/api/lojas\", \r\n        storeData\r\n      );\r\n      \r\n      setSuccess(true);\r\n      setLoading(false);\r\n      \r\n      setTimeout(() => {\r\n        router.push('/authPage');\r\n      }, 2000);\r\n      \r\n    } catch (error) {\r\n      setLoading(false);\r\n      \r\n      if (axios.isAxiosError(error) && error.response) {\r\n        if (error.response.status === 400) {\r\n          setError('Dados inválidos. Verifique as informações fornecidas.');\r\n        } else if (error.response.status === 409) {\r\n          setError('E-mail ou CPF/CNPJ já cadastrado.');\r\n        } else {\r\n          setError(`Erro no cadastro: ${error.response.data.message || 'Tente novamente mais tarde.'}`);\r\n        }\r\n      } else {\r\n        setError('Erro de conexão. Verifique sua internet e tente novamente.');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.headerPanel}>\r\n        <img src=\"/vlStore.svg\" alt=\"Logo\" className={styles.logo} />\r\n      </div>\r\n      \r\n      <div className={styles.loginBlock}>\r\n        <div className={styles.column}>\r\n          <div className={styles.welcomePanel}>\r\n            <h1>Cadastro de Loja</h1>\r\n          </div>\r\n          \r\n          <div className={styles.formPanel}>\r\n            {success && (\r\n              <div className=\"success-message\">\r\n                Loja cadastrada com sucesso! Redirecionando para o login...\r\n              </div>\r\n            )}\r\n            \r\n            {error && (\r\n              <div className=\"error-message\">\r\n                {error}\r\n              </div>\r\n            )}\r\n            \r\n            <form onSubmit={handleRegister}>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"storeName\">Nome da loja</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"storeName\"\r\n                  value={storeName}\r\n                  onChange={(e) => setStoreName(e.target.value)}\r\n                  disabled={loading}\r\n                  className=\"form-control\"\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"email\">E-mail</label>\r\n                <input\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  disabled={loading}\r\n                  className=\"form-control\"\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"cpfCnpj\">CPF/CNPJ</label>\r\n                <IMaskInput\r\n                  mask={[\r\n                    {\r\n                      mask: '000.000.000-00',\r\n                      lazy: false,\r\n                    },\r\n                    {\r\n                      mask: '00.000.000/0000-00',\r\n                      lazy: false,\r\n                    },\r\n                  ]}\r\n                  id=\"cpfCnpj\"\r\n                  value={cpfCnpj}\r\n                  onAccept={(value: string) => setCpfCnpj(value)}\r\n                  disabled={loading}\r\n                  placeholder=\"Digite o CPF ou CNPJ\"\r\n                  className=\"form-control\"\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"birthDate\">Data de Nascimento</label>\r\n                <IMaskInput\r\n                  mask=\"00/00/0000\"\r\n                  placeholder=\"dd/mm/aaaa\"\r\n                  className=\"form-control\"\r\n                  id=\"birthDate\"\r\n                  value={birthDate}\r\n                  onAccept={(value: string) => setBirthDate(value)}\r\n                  disabled={loading}\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"telephone\">Telefone</label>\r\n                <IMaskInput\r\n                  mask=\"(00) 00000-0000\"\r\n                  id=\"telephone\"\r\n                  value={telephone}\r\n                  onAccept={(telephone: string) => setTelephone(telephone)}\r\n                  className=\"form-control\"\r\n                  placeholder=\"Ex: (11) 99999-9999\"\r\n                  disabled={loading}\r\n                />\r\n              </div>\r\n\r\n            \r\n              \r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"password\">Senha</label>\r\n                <input\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  disabled={loading}\r\n                  className=\"form-control\"\r\n                />\r\n                <small>Mínimo de 8 caracteres, incluindo letras maiúsculas, minúsculas, números e caracteres especiais.</small>\r\n              </div>\r\n              \r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"confirmPassword\">Confirmar senha</label>\r\n                <input\r\n                  type=\"password\"\r\n                  id=\"confirmPassword\"\r\n                  value={confirmPassword}\r\n                  onChange={(e) => setConfirmPassword(e.target.value)}\r\n                  disabled={loading}\r\n                  className=\"form-control\"\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"form-buttons row\">\r\n                <button \r\n                  type=\"submit\" \r\n                  disabled={loading} \r\n                  className={`btn ${styles.btnPrimary}`}\r\n                >\r\n                  {loading ? 'Cadastrando...' : 'Cadastrar'}\r\n                </button>\r\n              </div>\r\n            </form>\r\n            \r\n            <div className=\"login-link\">\r\n              Já tem uma conta? <Link href=\"/authPage\">Faça login</Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StoreRegistration;"],"names":[],"mappings":"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","debugId":null}}]
}